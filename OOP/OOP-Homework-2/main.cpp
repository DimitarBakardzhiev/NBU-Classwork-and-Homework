#include <iostream>

using namespace std;

int main() {

    /*
     Задача 2 - Когато е логично използването на деден оператор. Използването му
     * също пести допълнително писане.
     * 
     Задача 3 - Student& operator+(int percentage) { 
     * this->grade += 5/100 * this->grade;
     * return *this; }
     * 
     Задача 4 - Да
     * 
     Задача 5 - Когато левият ѝ операнд е от типа на класа.
     * 
     Задача 6 - pi ще приеме стойнстта на дропната част, защото числото се приема за няколко
     * числа изброени със запетая. Приме стоността на последното.
     * 
     Задача 7 - Не може, защото левият операнд е от тип ostream, но функцията може да 
     * достъпи частните член-данни, като се декларира като friend на класа.
     * 
     Задача 8 - Защото имат префиксен и постфиксен вариант, които работят по различен начин.
     * 
     Задача 9 - Защото инкрементацията се изпълнява първа и е идентична на += 1.
     * 
     Задача 10 - i = 9, j = 18, k = 33
     * 
     Задача 12 - Няма да може да се използва извън класа.
     * 
     Задача 13 - Когато имаме динамично заделена памет.
     * 
     Задача 15 - Чрез разделяне на числителя на знаменателя. Може да се загуби точност.
     * 
     Задача 17 - +, +=, =
     * 
     Задача 18 - Може да се използва с безброй параметри.
     * 
     Задача 19 - Обекти от клас с предефиниран оператор ().
     */
    
    return 0;
}